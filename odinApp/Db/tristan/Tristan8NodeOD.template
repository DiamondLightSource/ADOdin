# tristan8NodeOD.template
# Defines the parameters required for the Tristan processing plugin

# % macro, P, Device Prefix
# % macro, R, Device Suffix
# % macro, DET, Detector Suffix
# % macro, PORT, Asyn Port name
# % macro, TIMEOUT, Timeout for Asyn driver requests
# % macro, name, Name specifying builder GUI generation

# This associates the template with an edm screen
# % gui, $(name), edm, TristanDAQ8Status.edl, P=$(P),R=$(R)
# % gui, $(PORT), edmtab, TristanDAQMain.edl, P=$(P),R=$(R)

# Timeout record required for macro substitution in builder
record(ao, "$(P)$(R)TimeoutSetting")
{
    field(VAL, "$(TIMEOUT)")
}


################################################################################
#
# Include 8 FP templates
#
################################################################################

substitute "TOTAL=8"

substitute "SERVER=01,N1=1,N2=2,N3=3,N4=4,N5=5,N6=6,N7=7,N8=8,A1=0,A2=1,A3=2,A4=3,A5=4,A6=5,A7=6,A8=7"
include "TristanServer8NodeOD.template"


###################################################################
#  This sums all UDP packets across all servers                   #
###################################################################
record(calcout, "$(P)$(R)SumUdpPackets")
{
    field(INPA, "$(P)$(R)SVR01:SumUdpPackets CP")
    field(CALC, "A")
    field(OUT, "$(P)$(DET)UdpReceived_RBV PP")
}


###################################################################
#  This checks FR connected status across all servers             #
###################################################################
record(calcout, "$(P)$(R)FRConnected_RBV")
{
    field(INPA, "$(P)$(R)SVR01:FRConnected_RBV CP")
    field(CALC, "A")
}


###################################################################
#  This checks FP connected status across all servers             #
###################################################################
record(calcout, "$(P)$(R)FPConnected_RBV")
{
    field(INPA, "$(P)$(R)SVR01:FPConnected_RBV CP")
    field(CALC, "A")
}


###################################################################
#  This checks FP error status across all servers                 #
###################################################################
record(calcout, "$(P)$(R)FPError_RBV")
{
    field(INPA, "$(P)$(R)SVR01:FPErrorState_RBV CP")
    field(CALC, "A")
}


###################################################################
#  This resets all FRs                                            #
###################################################################
record(seq, "$(P)$(R)ResetAllFR")
{
    field(DOL1, "1")
    field(LNK1, "$(P)$(R)SVR01:ResetStats.PROC PP")
    field(DLY1, "0.0")
}

###################################################################
#  This ensures that the correct HDF5 bit depth is selected       #
#  when the detector bit depth is changed.                        #
###################################################################
record(calcout, "$(P)$(R)DetToFPBitDepth")
{
    field(INPA, "$(P)$(DET)CounterDepth CP")
    field(CALC, "A=0||A=1?0:A=2?1:2")
    field(OUT, "$(P):OD:DataType PP")
}

###################################################################
#  This ensures that the acquisition ID is sent to the            #
#  process plugin when capture is started.                        #
###################################################################
# Process AcqID_Calc when $(P)$(R):Capture set to 1
record(calcout, "$(P)$(R)Proc:CalcCaptureStart")
{
    field(INPA, "$(P)$(R)Capture CP")
    field(CALC, "A=1?1:0")
    field(OUT, "$(P)$(R)Proc:AcqID_Calc.PROC PP")
    field(OOPT, "Transition To Non-zero")
}

# Fetch AcquisitionID from OdinDataDriver
record(acalcout, "$(P)$(R)Proc:AcqID_Calc")
{
    field(INAA, "$(P)$(R)AcquisitionID CP")
    field(CALC, "AA")
    field(OOPT, "Every Time")
    field(DOPT, "Use CALC")
    field(OUT,  "$(P)$(R)Proc:AcquisitionID PP")
    field(NELM, "256")
    field(NUSE, "256")
}

record(waveform, "$(P)$(R)Proc:AcquisitionID")
{
    field(DTYP, "asynOctetWrite")
    field(FTVL, "CHAR")
    field(NELM, "256")
    field(INP,  "@asyn($(PORT),0,1)_ODS_fp/config/tristan/acq_id")
}
