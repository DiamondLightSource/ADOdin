# femHousekeeping.template
# Defines the housekeeping parameters available from all FEMs.
#
# Parameters:
#   P       - EPICS name prefix
#   R       - EPICS plugin name
#   PORT    - Asyn port
#   ADDRESS - Asyn address
#   TOTAL   - Total number of FEMs
#   TIMEOUT - Timeout

# % autosave 2 LOW HIGH
#% archiver 10 Monitor
record(ai, "$(P)$(R)$(ADDRESS):MOLY_TEMPERATURE")
{
    field(SCAN, "1 second")
    field(DTYP, "asynFloat64")
    field(VAL,  "0")
    field(INP,  "@asyn($(PORT),$(ADDRESS),$(TIMEOUT))_ODD$(TOTAL)_status/fems/moly_temp")
    field(EGU,  "C")
    field(LOW,  "0")
    field(HIGH, "45.0")
    field(PREC, "2")
    field(HSV,  "MAJOR")
    field(LSV,  "MAJOR")
}

# % autosave 2 LOW HIGH
#% archiver 10 Monitor
record(ai, "$(P)$(R)$(ADDRESS):LOCAL_TEMP")
{
    field(SCAN, "1 second")
    field(DTYP, "asynFloat64")
    field(VAL,  "0")
    field(INP,  "@asyn($(PORT),$(ADDRESS),$(TIMEOUT))_ODD$(TOTAL)_status/fems/fem_local_temp")
    field(EGU,  "C")
    field(LOW,  "0")
    field(HIGH, "35.0")
    field(PREC, "2")
    field(HSV,  "MAJOR")
    field(LSV,  "MAJOR")
}

# % autosave 2 LOW HIGH
#% archiver 10 Monitor
record(ai, "$(P)$(R)$(ADDRESS):REMOTE_DIODE_TEMP")
{
    field(SCAN, "1 second")
    field(DTYP, "asynFloat64")
    field(VAL,  "0")
    field(INP,  "@asyn($(PORT),$(ADDRESS),$(TIMEOUT))_ODD$(TOTAL)_status/fems/fem_remote_temp")
    field(EGU,  "C")
    field(LOW,  "0.0")
    field(HIGH, "35.0")
    field(PREC, "2")
    field(HSV,  "MAJOR")
    field(LSV,  "MAJOR")
}

# % autosave 2 LOW HIGH
#% archiver 10 Monitor
record(ai, "$(P)$(R)$(ADDRESS):MOLY_HUMIDITY")
{
    field(SCAN, "1 second")
    field(DTYP, "asynFloat64")
    field(VAL,  "0")
    field(INP,  "@asyn($(PORT),$(ADDRESS),$(TIMEOUT))_ODD$(TOTAL)_status/fems/moly_humidity")
    field(EGU,  "%RH")
    field(LOW,  "0.0")
    field(HIGH, "70.0")
    field(PREC, "2")
    field(HSV,  "MAJOR")
    field(LSV,  "MAJOR")
}

#% archiver 10 Monitor
record(bi, "$(P)$(R)$(ADDRESS):P1V5_AVDD_1_POK")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(INP,  "@asyn($(PORT),$(ADDRESS),$(TIMEOUT))_ODI$(TOTAL)_status/supply/supply_p1v5_avdd1")
    field(ZSV,  "MAJOR")
}

#% archiver 10 Monitor
record(bi, "$(P)$(R)$(ADDRESS):P1V5_AVDD_2_POK")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(INP,  "@asyn($(PORT),$(ADDRESS),$(TIMEOUT))_ODI$(TOTAL)_status/supply/supply_p1v5_avdd2")
    field(ZSV,  "MAJOR")
}

#% archiver 10 Monitor
record(bi, "$(P)$(R)$(ADDRESS):P1V5_AVDD_3_POK")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(INP,  "@asyn($(PORT),$(ADDRESS),$(TIMEOUT))_ODI$(TOTAL)_status/supply/supply_p1v5_avdd3")
    field(ZSV,  "MAJOR")
}

#% archiver 10 Monitor
record(bi, "$(P)$(R)$(ADDRESS):P1V5_AVDD_4_POK")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(INP,  "@asyn($(PORT),$(ADDRESS),$(TIMEOUT))_ODI$(TOTAL)_status/supply/supply_p1v5_avdd4")
    field(ZSV,  "MAJOR")
}

#% archiver 10 Monitor
record(bi, "$(P)$(R)$(ADDRESS):P1V5_VDD_1_POK")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(INP,  "@asyn($(PORT),$(ADDRESS),$(TIMEOUT))_ODI$(TOTAL)_status/supply/supply_p1v5_vdd1")
    field(ZSV,  "MAJOR")
}

#% archiver 10 Monitor
record(bi, "$(P)$(R)$(ADDRESS):P2V5_DVDD_1_POK")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(INP,  "@asyn($(PORT),$(ADDRESS),$(TIMEOUT))_ODI$(TOTAL)_status/supply/supply_p2v5_dvdd1")
    field(ZSV,  "MAJOR")
}

# The chip identity as programmed in the fuses.
# % autosave 2 
#% archiver 10 Monitor
record(longin, "$(P)$(R)$(ADDRESS):EFuseIdC0")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(INP,  "@asyn($(PORT),$(ADDRESS),$(TIMEOUT))_ODI$(TOTAL)_status/efuse/efuseid_c0")
    field(PINI, "1")
}

# The chip identity as programmed in the fuses.
# % autosave 2 
#% archiver 10 Monitor
record(longin, "$(P)$(R)$(ADDRESS):EFuseIdC1")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(INP,  "@asyn($(PORT),$(ADDRESS),$(TIMEOUT))_ODI$(TOTAL)_status/efuse/efuseid_c1")
    field(PINI, "1")
}

# The chip identity as programmed in the fuses.
# % autosave 2 
#% archiver 10 Monitor
record(longin, "$(P)$(R)$(ADDRESS):EFuseIdC2")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(INP,  "@asyn($(PORT),$(ADDRESS),$(TIMEOUT))_ODI$(TOTAL)_status/efuse/efuseid_c2")
    field(PINI, "1")
}

# The chip identity as programmed in the fuses.
# % autosave 2 
#% archiver 10 Monitor
record(longin, "$(P)$(R)$(ADDRESS):EFuseIdC3")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(INP,  "@asyn($(PORT),$(ADDRESS),$(TIMEOUT))_ODI$(TOTAL)_status/efuse/efuseid_c3")
    field(PINI, "1")
}

# The chip identity as programmed in the fuses.
# % autosave 2 
#% archiver 10 Monitor
record(longin, "$(P)$(R)$(ADDRESS):EFuseIdC4")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(INP,  "@asyn($(PORT),$(ADDRESS),$(TIMEOUT))_ODI$(TOTAL)_status/efuse/efuseid_c4")
    field(PINI, "1")
}

# The chip identity as programmed in the fuses.
# % autosave 2 
#% archiver 10 Monitor
record(longin, "$(P)$(R)$(ADDRESS):EFuseIdC5")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(INP,  "@asyn($(PORT),$(ADDRESS),$(TIMEOUT))_ODI$(TOTAL)_status/efuse/efuseid_c5")
    field(PINI, "1")
}

# The chip identity as programmed in the fuses.
# % autosave 2 
#% archiver 10 Monitor
record(longin, "$(P)$(R)$(ADDRESS):EFuseIdC6")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(INP,  "@asyn($(PORT),$(ADDRESS),$(TIMEOUT))_ODI$(TOTAL)_status/efuse/efuseid_c6")
    field(PINI, "1")
}

# The chip identity as programmed in the fuses.
# % autosave 2 
#% archiver 10 Monitor
record(longin, "$(P)$(R)$(ADDRESS):EFuseIdC7")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(INP,  "@asyn($(PORT),$(ADDRESS),$(TIMEOUT))_ODI$(TOTAL)_status/efuse/efuseid_c7")
    field(PINI, "1")
}

# The saved chip identity.
# % autosave 2 
#% archiver 10 Monitor
record(longout, "$(P)$(R)$(ADDRESS):SavedEFuseIdC0")
{
    field(SCAN, "Passive")
    field(VAL,  "0")
}

# The saved chip identity.
# % autosave 2 
#% archiver 10 Monitor
record(longout, "$(P)$(R)$(ADDRESS):SavedEFuseIdC1")
{
    field(SCAN, "Passive")
    field(VAL,  "0")
}

# The saved chip identity.
# % autosave 2 
#% archiver 10 Monitor
record(longout, "$(P)$(R)$(ADDRESS):SavedEFuseIdC2")
{
    field(SCAN, "Passive")
    field(VAL,  "0")
}

# The saved chip identity.
# % autosave 2 
#% archiver 10 Monitor
record(longout, "$(P)$(R)$(ADDRESS):SavedEFuseIdC3")
{
    field(SCAN, "Passive")
    field(VAL,  "0")
}

# The saved chip identity.
# % autosave 2 
#% archiver 10 Monitor
record(longout, "$(P)$(R)$(ADDRESS):SavedEFuseIdC4")
{
    field(SCAN, "Passive")
    field(VAL,  "0")
}

# The saved chip identity.
# % autosave 2 
#% archiver 10 Monitor
record(longout, "$(P)$(R)$(ADDRESS):SavedEFuseIdC5")
{
    field(SCAN, "Passive")
    field(VAL,  "0")
}

# The saved chip identity.
# % autosave 2 
#% archiver 10 Monitor
record(longout, "$(P)$(R)$(ADDRESS):SavedEFuseIdC6")
{
    field(SCAN, "Passive")
    field(VAL,  "0")
}

# The saved chip identity.
# % autosave 2 
#% archiver 10 Monitor
record(longout, "$(P)$(R)$(ADDRESS):SavedEFuseIdC7")
{
    field(SCAN, "Passive")
    field(VAL,  "0")
}


# Overall alarm record for the per FEM housekeeping
record(calc, "$(P)$(R)$(ADDRESS):DEVSTA10")
{
    field(INPA, "$(P)$(R)DEVSTA11 MS CP")
    field(INPB, "$(P)$(R)EFuseIdMatches MS CP")
    field(INPC, "$(P)$(R)FemInitOk MS CP")
    field(ACKT, "NO")
}
record(calc, "$(P)$(R)$(ADDRESS):DEVSTA11")
{
    field(INPA, "$(P)$(R)MOLY_TEMPERATURE MS CP")
    field(INPB, "$(P)$(R)LOCAL_TEMP MS CP")
    field(INPC, "$(P)$(R)REMOTE_DIODE_TEMP MS CP")
    field(INPD, "$(P)$(R)MOLY_HUMIDITY MS CP")
    field(INPE, "$(P)$(R)P1V5_AVDD_1_POK MS CP")
    field(INPF, "$(P)$(R)P1V5_AVDD_2_POK MS CP")
    field(INPG, "$(P)$(R)P1V5_AVDD_3_POK MS CP")
    field(INPH, "$(P)$(R)P1V5_AVDD_4_POK MS CP")
    field(INPI, "$(P)$(R)P1V5_VDD_1_POK MS CP")
    field(INPJ, "$(P)$(R)P2V5_DVDD_1_POK MS CP")
    field(ACKT, "NO")
}

# Copy the current efuseid to the saved efuseid
record(bo, "$(P)$(R)$(ADDRESS):RecordEFuseId")
{
    field(VAL,  "0")
    field(ZNAM, "Idle")
    field(ONAM, "Record")
    field(FLNK, "$(P)$(R)$(ADDRESS):RecordEFuseId_TFR") 
}
record(seq, "$(P)$(R)$(ADDRESS):RecordEFuseId_TFR")
{
    field(SELM, "All")
    field(DOL1, "$(P)$(R)$(ADDRESS):EFuseIdC0.VAL")
    field(LNK1, "$(P)$(R)$(ADDRESS):SavedEFuseIdC0.VAL PP")
    field(DOL2, "$(P)$(R)$(ADDRESS):EFuseIdC1.VAL")
    field(LNK2, "$(P)$(R)$(ADDRESS):SavedEFuseIdC1.VAL PP")
    field(DOL3, "$(P)$(R)$(ADDRESS):EFuseIdC2.VAL")
    field(LNK3, "$(P)$(R)$(ADDRESS):SavedEFuseIdC2.VAL PP")
    field(DOL4, "$(P)$(R)$(ADDRESS):EFuseIdC3.VAL")
    field(LNK4, "$(P)$(R)$(ADDRESS):SavedEFuseIdC3.VAL PP")
    field(DOL5, "$(P)$(R)$(ADDRESS):EFuseIdC4.VAL")
    field(LNK5, "$(P)$(R)$(ADDRESS):SavedEFuseIdC4.VAL PP")
    field(DOL6, "$(P)$(R)$(ADDRESS):EFuseIdC5.VAL")
    field(LNK6, "$(P)$(R)$(ADDRESS):SavedEFuseIdC5.VAL PP")
    field(DOL7, "$(P)$(R)$(ADDRESS):EFuseIdC6.VAL")
    field(LNK7, "$(P)$(R)$(ADDRESS):SavedEFuseIdC6.VAL PP")
    field(DOL8, "$(P)$(R)$(ADDRESS):EFuseIdC7.VAL")
    field(LNK8, "$(P)$(R)$(ADDRESS):SavedEFuseIdC7.VAL PP")
    field(DOL9, "0")
    field(LNK9, "$(P)$(R)$(ADDRESS):RecordEFuseId")
}

record(bi, "$(P)$(R)$(ADDRESS):EFuseIdMatches")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(INP,  "@asyn($(PORT),$(ADDRESS),$(TIMEOUT))_ODI$(TOTAL)_status/efuse/efuse_match")
    field(ZSV,  "MAJOR")
}

#record(bi, "$(P)$(R)$(ADDRESS):EFuseIdMatches")
#{
#    field(LLSV,  "MAJOR")
#}

# Non-zero if the current efuseid matches the saved efuseid
#record(calc, "$(P)$(R)$(ADDRESS):EFuseIdMatches")
#{
#    field(INPA, "$(P)$(R)$(ADDRESS):EFuseIdC0")
#    field(INPB, "$(P)$(R)$(ADDRESS):SavedEFuseIdC0")
#    field(INPC, "$(P)$(R)$(ADDRESS):EFuseIdC1")
#    field(INPD, "$(P)$(R)$(ADDRESS):SavedEFuseIdC1")
#    field(INPE, "$(P)$(R)$(ADDRESS):EFuseIdC2")
#    field(INPF, "$(P)$(R)$(ADDRESS):SavedEFuseIdC2")
#    field(INPG, "$(P)$(R)$(ADDRESS):EFuseIdC3")
#    field(INPH, "$(P)$(R)$(ADDRESS):SavedEFuseIdC3")
#    field(INPI, "$(P)$(R)$(ADDRESS):EFuseIdMatches2.VAL") 
#    field(CALC, "(A=B)&&(C=D)&&(E=F)&&(G=H)&&I")
#    field(LLSV,  "MAJOR")
#    field(LOLO,  "0")
#}
#record(calc, "$(P)$(R)$(ADDRESS):EFuseIdMatches2")
#{
#    field(SCAN, "1 second")
#    field(INPA, "$(P)$(R)$(ADDRESS):EFuseIdC4")
#    field(INPB, "$(P)$(R)$(ADDRESS):SavedEFuseIdC4")
#    field(INPC, "$(P)$(R)$(ADDRESS):EFuseIdC5")
#    field(INPD, "$(P)$(R)$(ADDRESS):SavedEFuseIdC5")
#    field(INPE, "$(P)$(R)$(ADDRESS):EFuseIdC6")
#    field(INPF, "$(P)$(R)$(ADDRESS):SavedEFuseIdC6")
#    field(INPG, "$(P)$(R)$(ADDRESS):EFuseIdC7")
#    field(INPH, "$(P)$(R)$(ADDRESS):SavedEFuseIdC7")
#    field(CALC, "(A=B)&&(C=D)&&(E=F)&&(G=H)")
#    field(FLNK, "$(P)$(R)$(ADDRESS):EFuseIdMatches")
#}

# Non-zero if the FEM initialised OK
record(bi, "$(P)$(R)$(ADDRESS):FemInitOk")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(INP,  "@asyn($(PORT),$(ADDRESS),$(TIMEOUT))_ODI$(TOTAL)_status/fem_state")
    field(ZSV,  "MAJOR")
}

#% archiver 1 monitor
record(longin, "$(P)$(R)$(ADDRESS):FemFrames")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(INP,  "@asyn($(PORT),$(ADDRESS),$(TIMEOUT))_ODI$(TOTAL)_status/fem_frames")
}

#% archiver 10 Monitor
record(longin, "$(P)$(R)$(ADDRESS):FemCommsFaults")
{
#    field(SCAN, "I/O Intr")
#    field(DTYP, "asynInt32")
    field(VAL,  "0")
#    field(INP,  "@asyn($(PORT),0,$(TIMEOUT))FEM_COMMS_FAULTS")
}

record(longout, "$(P)$(R)$(ADDRESS):ResetFemCommsFaults")
{
#    field(DTYP, "asynInt32")
    field(VAL,  "0")
#    field(OUT,  "@asyn($(PORT),0,$(TIMEOUT))RESET_FEM_COMMS_FAULTS")
}

#% archiver 1 monitor
record(longin, "$(P)$(R)$(ADDRESS):CalibrationStatus_RBV")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(INP,  "@asyn($(PORT),$(ADDRESS),$(TIMEOUT))_ODI$(TOTAL)_status/calibration")
}
