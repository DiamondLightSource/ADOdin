# femHousekeeping.template
# Defines the housekeeping parameters available from all FEMs.
#
# Parameters:
#   P       - EPICS name prefix
#   R       - EPICS plugin name
#   PORT    - Asyn port
#   ADDRESS - Asyn address
#   TOTAL   - Total number of FEMs
#   TIMEOUT - Timeout

# % autosave 2 LOW HIGH
#% archiver 10 Monitor
record(ai, "$(P)$(R)$(ADDRESS):LOCAL_TEMP")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "asynFloat64")
    field(VAL,  "0")
    field(INP,  "@asyn($(PORT),$(ADDRESS),$(TIMEOUT))_ODD$(TOTAL)_status/fem/temp")
    field(EGU,  "C")
    field(LOW,  "0")
    field(HIGH, "35.0")
    field(PREC, "2")
    field(HSV,  "MAJOR")
    field(LSV,  "MAJOR")
}

# TODO - I'm not sure we need separate fem templates for Arc - for review
#        Note that this frame count comes from the detector
#% archiver 1 monitor
record(longin, "$(P)$(R)$(ADDRESS):FemFrames")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(INP,  "@asyn($(PORT),$(ADDRESS),$(TIMEOUT))_ODI$(TOTAL)_status/detector/frames_acquired")
}

#% archiver 10 Monitor
record(longin, "$(P)$(R)$(ADDRESS):FemCommsFaults")
{
#    field(SCAN, "I/O Intr")
#    field(DTYP, "asynInt32")
    field(VAL,  "0")
#    field(INP,  "@asyn($(PORT),0,$(TIMEOUT))FEM_COMMS_FAULTS")
}

record(longout, "$(P)$(R)$(ADDRESS):ResetFemCommsFaults")
{
#    field(DTYP, "asynInt32")
    field(VAL,  "0")
#    field(OUT,  "@asyn($(PORT),0,$(TIMEOUT))RESET_FEM_COMMS_FAULTS")
}

