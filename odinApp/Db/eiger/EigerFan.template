# % macro, P, Device Prefix
# % macro, R, Device Suffix
# % macro, PORT, Asyn Port name

#### Status #######################################################################################

#% archiver 1 monitor
record(longin, "$(P)$(R)FAN:ProcessConnected_RBV")
{
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),0,1)_ODB1_eiger_fan/status/connected")
    field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)FAN:CurrentSeries_RBV")
{
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),0,1)_ODI1_eiger_fan/status/series")
}

record(longin, "$(P)$(R)FAN:CurrentFrame_RBV")
{
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),0,1)_ODI1_eiger_fan/status/frame")
}

#% archiver 1 monitor
record(longin, "$(P)$(R)FAN:FramesSent_RBV")
{
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),0,1)_ODI1_eiger_fan/status/frames_sent")
}

record(longin, "$(P)$(R)FAN:CurrentOffset_RBV")
{
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),0,1)_ODI1_eiger_fan/status/fan_offset")
}

record(stringin, "$(P)$(R)FAN:State_RBV")
{
    field(DTYP, "asynOctetRead")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),0,1)_ODS1_eiger_fan/status/state")
}

#% archiver 1 monitor
record(scalcout, "$(P)$(R)FAN:StateReady_RBV")
{
     field(INAA, "$(P)$(R)FAN:State_RBV CP")
     field(CALC, "AA==BB?1:0")
     field(BB,   "DSTR_HEADER")
}

record(longin, "$(P)$(R)FAN:ConsumersConnected_RBV")
{
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),0,1)_ODI1_eiger_fan/status/num_conn")
}

#### Config #######################################################################################

record(bo, "$(P)$(R)FAN:ForwardStream")
{
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),0,1)_ODB1_eiger_fan/config/forward_stream")
    field(ZNAM, "No")
    field(ONAM, "Yes")
    info(autosaveFields, "VAL")
}

record(bi, "$(P)$(R)FAN:ForwardStream_RBV")
{
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0,1)_ODB1_eiger_fan/config/forward_stream")
    field(ZNAM, "No")
    field(ONAM, "Yes")
    field(SCAN, "I/O Intr")
}

# Fetch AcquisitionID from OdinDataDriver
record(acalcout, "$(P)$(R)FAN:AcqID_Calc")
{
    field(INAA, "$(P)$(R)AcquisitionID CP")
    field(CALC, "AA")
    field(OOPT, "Every Time")
    field(DOPT, "Use CALC")
    field(OUT,  "$(P)$(R)FAN:AcquisitionID PP")
    field(NELM, "256")
    field(NUSE, "256")
}

record(waveform, "$(P)$(R)FAN:AcquisitionID")
{
    field(DTYP, "asynOctetWrite")
    field(FTVL, "CHAR")
    field(NELM, "256")
    field(INP,  "@asyn($(PORT),0,1)_ODS_eiger_fan/config/acqid")
}

record(waveform, "$(P)$(R)FAN:AcquisitionID_RBV")
{
    field(DTYP, "asynOctetRead")
    field(FTVL, "CHAR")
    field(NELM, "256")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),0,1)_ODS_eiger_fan/config/acqid")
}

record(longout, "$(P)$(R)FAN:Offset")
{
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),0,1)_ODI1_eiger_fan/config/offset")
}

record(longin, "$(P)$(R)FAN:Offset_RBV")
{
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),0,1)_ODI1_eiger_fan/config/offset")
}

record(longin, "$(P)$(R)FAN:Consumers_RBV")
{
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),0,1)_ODI1_eiger_fan/config/num_consumers")
}

record(longout, "$(P)$(R)FAN:BlockSize")
{
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),0,1)_ODI1_eiger_fan/config/block_size")
}

record(longin, "$(P)$(R)FAN:BlockSize_RBV")
{
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),0,1)_ODI1_eiger_fan/config/block_size")
}

record(stringin, "$(P)$(R)FAN:ControlPort_RBV")
{
    field(DTYP, "asynOctetRead")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),0,1)_ODS1_eiger_fan/config/ctrl_channel_port")
}

record(stringin, "$(P)$(R)FAN:EigerAddress_RBV")
{
    field(DTYP, "asynOctetRead")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),0,1)_ODS1_eiger_fan/config/eiger_channel_address")
}

record(stringin, "$(P)$(R)FAN:EigerPort_RBV")
{
    field(DTYP, "asynOctetRead")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),0,1)_ODS1_eiger_fan/config/eiger_channel_port")
}

record(longin, "$(P)$(R)FAN:FanPortBase_RBV")
{
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),0,1)_ODI1_eiger_fan/config/fan_channel_port_start")
}

record(longin, "$(P)$(R)FAN:ZMQSockets_RBV")
{
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),0,1)_ODI1_eiger_fan/config/num_zmq_sockets")
}

record(longin, "$(P)$(R)FAN:ZMQThreads_RBV")
{
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),0,1)_ODI1_eiger_fan/config/num_zmq_threads")
}

record(calc, "$(P)$(R)FAN:AllConsumersConnected_RBV")
{
    field(INPA, "$(P)$(R)FAN:Consumers_RBV CP")
    field(INPB, "$(P)$(R)FAN:ConsumersConnected_RBV CP")
    field(CALC, "A==B?1:0")
}
