# Database for the records specific to the Eiger2X
# Gary Yendell
# 1/8/19

# Macros:
#% macro, P, Device Prefix
#% macro, R, Device Suffix
#% macro, PORT, Asyn Port name
#% macro, TIMEOUT, Timeout
#% macro, ADDR, Asyn Port address
#% macro, API, Eiger API version

# This associates the template with an edm screen
# % gui, $(PORT), edmtab, EigerDetector.edl, P=$(P),R=$(R)

include "EigerBase.template"

record(mbbo,"$(P)$(R)CountingMode") {
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))_ODE_detector/api/$(API)/config/counting_mode")
    field(VAL,  "1")
    field(VAL,  "0")
    field(ZRST, "Normal")
    field(ZRVL, "0")
    field(ONST, "Retrigger")
    field(ONVL, "1")
}

record(mbbi,"$(P)$(R)CountingMode_RBV") {
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))_ODE_detector/api/$(API)/config/counting_mode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRST, "Normal")
    field(ZRVL, "0")
    field(ONST, "Retrigger")
    field(ONVL, "1")
}

# Enable Auto Summation
record(bo,"$(P)$(R)AutoSummation") {
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AUTO_SUMMATION")
    field(VAL,  "1")
    field(ZNAM, "Disabled")
    field(ONAM, "Enabled")
}

record(bi,"$(P)$(R)AutoSummation_RBV") {
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AUTO_SUMMATION")
    field(ZNAM, "Disabled")
    field(ONAM, "Enabled")
    field(SCAN, "I/O Intr")
}

# Trigger Start Delay
record(ao, "$(P)$(R)TriggerStartDelay")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TRIGGER_START_DELAY")
    field(DESC, "Trigger start delay")
    field(EGU,  "s")
    field(PREC, "9")
}

record(ai, "$(P)$(R)TriggerStartDelay_RBV")
{
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TRIGGER_START_DELAY")
    field(DESC, "Trigger start delay")
    field(EGU,  "s")
    field(PREC, "9")
    field(SCAN, "I/O Intr")
}

# Compression algorithm selection
record(mbbo,"$(P)$(R)CompressionAlgo") {
    field(ZRST, "BSLZ4")
    field(ZRVL, "0")
    field(ONST, "LZ4")
    field(ONVL, "1")
    field(TWST, "None")
    field(TWVL, "2")
}

record(mbbi,"$(P)$(R)CompressionAlgo_RBV") {
    field(ZRST, "BSLZ4")
    field(ZRVL, "0")
    field(ONST, "LZ4")
    field(ONVL, "1")
    field(TWST, "None")
    field(TWVL, "2")
}

# Stream Header Detail Selection
record(mbbo,"$(P)$(R)StreamHdrDetail") {
    field(ZRST, "None")
    field(ZRVL, "0")
    field(ONST, "Basic")
    field(ONVL, "1")
    field(TWST, "All")
    field(TWVL, "2")
}

record(mbbi,"$(P)$(R)StreamHdrDetail_RBV") {
    field(ZRST, "None")
    field(ZRVL, "0")
    field(ONST, "Basic")
    field(ONVL, "1")
    field(TWST, "All")
    field(TWVL, "2")
}

# Stream API enable
record(bo,"$(P)$(R)StreamEnable") {
    field(ZNAM, "No")
    field(ONAM, "Yes")
}

record(bi,"$(P)$(R)StreamEnable_RBV") {
    field(ZNAM, "No")
    field(ONAM, "Yes")
}
